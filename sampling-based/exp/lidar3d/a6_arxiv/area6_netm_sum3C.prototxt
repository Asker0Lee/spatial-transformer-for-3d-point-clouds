layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  python_param {
    module: "dataset_lidar"
    layer: "InputShapenet"
    param_str: "{\'sample_size\': 8192, \'test_area\': \'6\', \'batch_size\': 12, \'feat_dims\': \'x_y_z\', \'subset\': \'train\', \'root\': \'../../data/shapenet_ericyi_ply\', \'jitter_xyz\': 0.01, \'jitter_stretch\': 0.05, \'jitter_rotation\': 5.0}"
  }
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  python_param {
    module: "dataset_lidar"
    layer: "InputShapenet"
    param_str: "{\'sample_size\': 8192, \'test_area\': \'6\', \'batch_size\': 12, \'feat_dims\': \'x_y_z\', \'subset\': \'val\', \'root\': \'../../data/shapenet_ericyi_ply\', \'jitter_xyz\': 0.0, \'jitter_stretch\': 0.0, \'jitter_rotation\': 0.0}"
  }
}
layer {
  name: "data_feat"
  type: "Python"
  bottom: "data"
  top: "data_feat"
  python_param {
    module: "custom_layers"
    layer: "PickAndScale"
    param_str: "0_1_2"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data_feat"
  top: "conv1"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 0.10000000149
  }
  convolution_param {
    num_output: 32
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "bn1"
  type: "BatchNorm"
  bottom: "conv1"
  top: "bn1"
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "bn1"
  top: "bn1"
}
layer {
  name: "data_lattice0"
  type: "Python"
  bottom: "data"
  top: "data_lattice0"
  python_param {
    module: "custom_layers"
    layer: "PickAndScale"
    param_str: "0*48_1*48_2*48"
  }
}
layer {
  name: "fconv1"
  type: "Convolution"
  bottom: "data_lattice0"
  top: "fconv1"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 0.10000000149
  }
  convolution_param {
    num_output: 3
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "fbn1"
  type: "BatchNorm"
  bottom: "fconv1"
  top: "fbn1"
}
layer {
  name: "frelu1"
  type: "ReLU"
  bottom: "fbn1"
  top: "fbn1"
}

layer {
  name: "feat1"
  type: "Eltwise"
  bottom: "data_lattice0"
  bottom: "fbn1"
  top: "feat1"
  eltwise_param { operation: SUM }
}
layer {
  name: "conv2"
  type: "Permutohedral"
  bottom: "bn1"
  bottom: "feat1"
  bottom: "feat1"
  top: "conv2"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  permutohedral_param {
    num_output: 64
    neighborhood_size: 2
    filter_filler {
      type: "gaussian"
      std: 0.0010000000475
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
    group: 1
    norm_type: AFTER
    offset_type: NONE
  }
}
layer {
  name: "bn2"
  type: "BatchNorm"
  bottom: "conv2"
  top: "bn2"
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "bn2"
  top: "bn2"
}
layer {
  name: "data_lattice1"
  type: "Python"
  bottom: "data"
  top: "data_lattice1"
  python_param {
    module: "custom_layers"
    layer: "PickAndScale"
    param_str: "0*24_1*24_2*24"
  }
}
layer {
  name: "fconv2"
  type: "Convolution"
  bottom: "fbn1"
  top: "fconv2"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 0.10000000149
  }
  convolution_param {
    num_output: 3
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "fbn2"
  type: "BatchNorm"
  bottom: "fconv2"
  top: "fbn2"
}
layer {
  name: "frelu2"
  type: "ReLU"
  bottom: "fbn2"
  top: "fbn2"
}

layer {
  name: "feat2"
  type: "Eltwise"
  bottom: "data_lattice1"
  bottom: "fbn2"
  top: "feat2"
  eltwise_param { operation: SUM }
}

layer {
  name: "conv3"
  type: "Permutohedral"
  bottom: "bn2"
  bottom: "feat2"
  bottom: "feat2"
  top: "conv3"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  permutohedral_param {
    num_output: 128
    neighborhood_size: 2
    filter_filler {
      type: "gaussian"
      std: 0.0010000000475
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
    group: 1
    norm_type: AFTER
    offset_type: NONE
  }
}
layer {
  name: "bn3"
  type: "BatchNorm"
  bottom: "conv3"
  top: "bn3"
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "bn3"
  top: "bn3"
}
layer {
  name: "data_lattice2"
  type: "Python"
  bottom: "data"
  top: "data_lattice2"
  python_param {
    module: "custom_layers"
    layer: "PickAndScale"
    param_str: "0*12_1*12_2*12"
  }
}
layer {
  name: "fconv3"
  type: "Convolution"
  bottom: "fbn2"
  top: "fconv3"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 0.10000000149
  }
  convolution_param {
    num_output: 3
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "fbn3"
  type: "BatchNorm"
  bottom: "fconv3"
  top: "fbn3"
}
layer {
  name: "frelu3"
  type: "ReLU"
  bottom: "fbn3"
  top: "fbn3"
}

layer {
  name: "feat3"
  type: "Eltwise"
  bottom: "data_lattice2"
  bottom: "fbn3"
  top: "feat3"
  eltwise_param { operation: SUM }
}

layer {
  name: "conv4"
  type: "Permutohedral"
  bottom: "bn3"
  bottom: "feat3"
  bottom: "feat3"
  top: "conv4"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  permutohedral_param {
    num_output: 256
    neighborhood_size: 2
    filter_filler {
      type: "gaussian"
      std: 0.0010000000475
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
    group: 1
    norm_type: AFTER
    offset_type: NONE
  }
}
layer {
  name: "bn4"
  type: "BatchNorm"
  bottom: "conv4"
  top: "bn4"
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "bn4"
  top: "bn4"
}
layer {
  name: "data_lattice3"
  type: "Python"
  bottom: "data"
  top: "data_lattice3"
  python_param {
    module: "custom_layers"
    layer: "PickAndScale"
    param_str: "0*6_1*6_2*6"
  }
}
layer {
  name: "fconv4"
  type: "Convolution"
  bottom: "fbn3"
  top: "fconv4"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 0.10000000149
  }
  convolution_param {
    num_output: 3
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "fbn4"
  type: "BatchNorm"
  bottom: "fconv4"
  top: "fbn4"
}
layer {
  name: "frelu4"
  type: "ReLU"
  bottom: "fbn4"
  top: "fbn4"
}

layer {
  name: "feat4"
  type: "Eltwise"
  bottom: "data_lattice3"
  bottom: "fbn4"
  top: "feat4"
  eltwise_param { operation: SUM }
}

layer {
  name: "conv5"
  type: "Permutohedral"
  bottom: "bn4"
  bottom: "feat4"
  bottom: "feat4"
  top: "conv5"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  permutohedral_param {
    num_output: 256
    neighborhood_size: 2
    filter_filler {
      type: "gaussian"
      std: 0.0010000000475
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
    group: 1
    norm_type: AFTER
    offset_type: NONE
  }
}
layer {
  name: "bn5"
  type: "BatchNorm"
  bottom: "conv5"
  top: "bn5"
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "bn5"
  top: "bn5"
}
layer {
  name: "data_lattice4"
  type: "Python"
  bottom: "data"
  top: "data_lattice4"
  python_param {
    module: "custom_layers"
    layer: "PickAndScale"
    param_str: "0*3_1*3_2*3"
  }
}

layer {
  name: "fconv5"
  type: "Convolution"
  bottom: "fbn4"
  top: "fconv5"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 0.10000000149
  }
  convolution_param {
    num_output: 3
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "fbn5"
  type: "BatchNorm"
  bottom: "fconv5"
  top: "fbn5"
}
layer {
  name: "frelu5"
  type: "ReLU"
  bottom: "fbn5"
  top: "fbn5"
}

layer {
  name: "feat5"
  type: "Eltwise"
  bottom: "data_lattice4"
  bottom: "fbn5"
  top: "feat5"
  eltwise_param { operation: SUM }
}

layer {
  name: "conv6"
  type: "Permutohedral"
  bottom: "bn5"
  bottom: "feat5"
  bottom: "feat5"
  top: "conv6"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  permutohedral_param {
    num_output: 256
    neighborhood_size: 2
    filter_filler {
      type: "gaussian"
      std: 0.0010000000475
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
    group: 1
    norm_type: AFTER
    offset_type: NONE
  }
}
layer {
  name: "bn6"
  type: "BatchNorm"
  bottom: "conv6"
  top: "bn6"
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "bn6"
  top: "bn6"
}
layer {
  name: "concat6"
  type: "Concat"
  bottom: "bn6"
  bottom: "bn2"
  bottom: "bn3"
  bottom: "bn4"
  bottom: "bn5"
  top: "concat6"
}
layer {
  name: "conv7"
  type: "Convolution"
  bottom: "concat6"
  top: "conv7"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 0.10000000149
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "bn7"
  type: "BatchNorm"
  bottom: "conv7"
  top: "bn7"
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "bn7"
  top: "bn7"
}
layer {
  name: "conv8"
  type: "Convolution"
  bottom: "bn7"
  top: "conv8"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 0.10000000149
  }
  convolution_param {
    num_output: 13
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "conv8"
  bottom: "label"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "conv8"
  bottom: "label"
  top: "accuracy"
}
